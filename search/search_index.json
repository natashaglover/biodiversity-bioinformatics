{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Course website","text":""},{"location":"#course-teachers-and-authors","title":"Course teachers and authors","text":""},{"location":"#day-1","title":"Day 1","text":"<ul> <li>Christophe Dessimoz  </li> <li>Natasha Glover  </li> <li>Sina Majidian  </li> <li>Yannis Nevers</li> </ul>"},{"location":"#day-2","title":"Day 2","text":"<ul> <li>Robert Waterhouse  </li> <li>Giulia Campli</li> <li>Antonin Thi\u00e9baut  </li> </ul>"},{"location":"#day-3","title":"Day 3","text":"<ul> <li>Marc Robinson-Rechavi  </li> <li>Alessandro Brandulas Cammarata  </li> <li>Marina Bras\u00f3-Vives  </li> <li>Julien Wollbrett  </li> </ul>"},{"location":"#course-repository-and-website-authors","title":"Course repository and website authors","text":"<ul> <li>Antonin Thi\u00e9baut  </li> <li>Patricia Palagi  </li> </ul>"},{"location":"#material","title":"Material","text":"<ul> <li>This website</li> <li>Google doc (through mail)</li> <li>Slack channel</li> </ul>"},{"location":"#learning-outcomes","title":"Learning outcomes","text":""},{"location":"#general-learning-outcomes","title":"General learning outcomes","text":"<p>After this course, you will be able to:</p> <ul> <li>Interpret phylogenetic trees and sequence alignments</li> <li>Infer orthologs and paralogs using graph- and tree-based methods</li> <li>Design and implement comparative analyses to interrogate genomics data, e.g. phylogenomics or gene family dynamics</li> </ul>"},{"location":"#learning-outcomes-explained","title":"Learning outcomes explained","text":"<p>To reach the general learning outcomes above, we have set a number of smaller learning outcomes. Each chapter starts with these smaller learning outcomes. Use these at the start of a chapter to get an idea what you will learn. Use them also at the end of a chapter to evaluate whether you have learned what you were expected to learn.</p>"},{"location":"#learning-experiences","title":"Learning experiences","text":"<p>To reach the learning outcomes we will use lectures and exercises. During exercises, you are free to discuss with other participants. During lectures, focus on the lecture only.</p>"},{"location":"#exercises","title":"Exercises","text":"<p>Each block has practical work involved. Some more than others. The practicals are subdivided into chapters, and we\u2019ll have a (short) discussion after each chapter. All answers to the practicals are incorporated, but they are hidden. Do the exercise first by yourself, before checking out the answer. If your answer is different from the answer in the practicals, try to figure out why they are different.</p>"},{"location":"#asking-questions","title":"Asking questions","text":"<p>During lectures, you are encouraged to raise your hand if you have questions.</p> <p>A main source of communication will be our Slack channel. Ask background questions that interest you personally at #background. During the exercises, e.g. if you are stuck or don\u2019t understand what is going on, use the Slack channel #q-and-a.  This channel is not only meant for asking questions but also for answering questions of other participants. If you are replying to a question, use the \u201creply in thread\u201d option.</p> <p>The teachers will review the answers, and add/modify if necessary. If you\u2019re really stuck and need specific tutor support, write the teachers or helpers personally.</p> <p>To summarise:</p> <ul> <li>During lectures: raise hand/zoom functionality</li> <li>Personal interest questions: #background</li> <li>During exercises: #q-and-a on Slack</li> </ul>"},{"location":"course_schedule/","title":"Course schedule","text":""},{"location":"course_schedule/#day-1-molecular-evolution-and-phylogenetics","title":"Day 1 - Molecular evolution and phylogenetics","text":"Block Start End Subject Block 1 9:00 AM 10:30 AM Introduction to molecular evolution &amp; phylogenetics 10:30 AM 11:00 AM BREAK Block 2 11:00 AM 12:30 PM Inferring Orthology and Paralogy 12:30 PM 1:30 PM LUNCH BREAK Block 3 1:30 PM 3:00 PM Inference through tree overlap methods, tree reconciliation 3:00 PM 3:30 PM BREAK Block 4 3:30 PM 5:00 PM OMA database and OMA standalone"},{"location":"course_schedule/#day-2-orthology-focused-arthropod-comparative-genomics","title":"Day 2 - Orthology-focused arthropod comparative genomics","text":"Timings Activities 09:00 - 10:15 Introductory Lectures - Orthology &amp; BUSCO 10:15 - 10:30 Introduction to the Hands-On &amp; Setting up Workspaces 10:30 - 11:00 Coffee Break 11:00 - 12:00 Practical Exercise I - BUSCO 12:00 - 13:00 Lunch Break 13:00 - 13:45 Practical Exercise II - OrthoDB &amp; Species Trees 13:45 - 14:30 Practical Exercise III - Gene-Tree-Species-Tree Reconciliation 14:30 - 15:00 Coffee Break 15:00 - 15:45 Case Studies Lectures 15:45 - 16:30 Practical Exercise IV - Gene Family Ancestral State Reconstruction 16:30 - 17:00 Wrap-up &amp; Open Q&amp;A"},{"location":"course_schedule/#day-3-duplication-of-genes-and-genomes-expression","title":"Day 3 - Duplication of genes and genomes, expression","text":"Block Start End Subject Block 1 9:00 AM 10:30 AM Lectures 1 10:30 AM 11:00 AM BREAK Block 2 11:00 AM 12:30 PM Lectures 2 12:30 PM 1:30 PM LUNCH BREAK Block 3 1:30 PM 3:00 PM Exercises 1 3:00 PM 3:30 PM BREAK Block 4 3:30 PM 5:00 PM Exercises 2 <p>https://www.tablesgenerator.com/markdown_tables#</p>"},{"location":"precourse/","title":"Precourse preparations and Gitpod information","text":""},{"location":"precourse/#technical-requirements","title":"Technical requirements","text":"<p>Your computer should have an internet connection, and at least 8 GB RAM and 50 GB free disk space.</p>"},{"location":"precourse/#unix","title":"UNIX","text":"<p>As is stated in the course prerequisites at the announcement web page, we expect participants to have a basic understanding of working with the command line on UNIX-based systems. You can test your UNIX skills with a quiz here. If you don\u2019t have experience with UNIX command line, or if you\u2019re unsure whether you meet the prerequisites, follow our online UNIX tutorial. Before the course, make sure you can comfortably work with command line, R and git repository.</p>"},{"location":"precourse/#software","title":"Software","text":"<p>Most of the exercises will be run on Gitpod. Here are the steps to log in on Gitpod:</p> <ol> <li>Create a github or a gitlab account. Remember your email, your username, and your password!</li> </ol> <ol> <li>Open Gitpod and link your GitLab Account</li> </ol> <p>Authenticate your login with your gitlab/github credentials!</p> <ol> <li> <p>Open the desired repository in Gitpod: add <code>gitpod.io/#</code> at the beginning of the repository URL or\u2026</p> <ul> <li>Click here to directly open Day1 repo in Gitpod  </li> <li>Click here to directly open Day2 repo in Gitpod</li> <li>Click here to directly open Day3 repo in Gitpod  </li> </ul> </li> </ol>"},{"location":"precourse/#using-gitpod","title":"Using Gitpod","text":"<p>You can find the entire Gitpod documentation here.</p>"},{"location":"precourse/#reminders","title":"Reminders","text":"<ul> <li>Only files in the <code>/workspace</code> directory are kept between state transitions (when you stop and restart a workspace), so don\u2019t store files anywhere else otherwise they will be deleted when you stop the workspace</li> <li>Always stop workspace before leaving, otherwise it will keep running and be billed!<ul> <li>\u2018Menu\u2019 (the 3 horizontal bars top-left of the window)</li> <li>\u2018Gitpod: Stop workspace\u2019 (lower half of the menu)</li> </ul> </li> </ul>"},{"location":"precourse/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>If you have a problem with your browser not showing everything, blocking pop-ups\u2026 click here for help</li> <li>If you have a problem when authenticating through gitlab or github, click here for help</li> <li>If the text you enter in the Gitpod terminal is invisible, try deactivating the GPU acceleration:<ul> <li>Click on the cog in the bottom-left</li> <li><code>Settings</code></li> <li>Type <code>gpu acceleration</code> in the search bar</li> <li>Set <code>Terminal \u203a Integrated: Gpu Acceleration</code> to <code>off</code></li> </ul> </li> </ul>"},{"location":"course_material/day2/1_general/","title":"General information and course material","text":""},{"location":"course_material/day2/1_general/#general-objectives","title":"General objectives","text":"<p>Understand the principles of graph-based orthology delineation using OrthoDB as an example; learn how to browse and programmatically query OrthoDB; learn how to use BUSCO to assess genomics data quality; learn how to formulate comparative genomics questions, develop and apply approaches to address them (with a focus on using orthology data), and then critically interpret them, through case studies from arthropods.</p>"},{"location":"course_material/day2/1_general/#course-material","title":"Course material","text":"<p>Presentation</p> <p> Download the presentation</p> <p>Case study: Moulting genes across arthropod diversity</p> <p> Download the presentation</p> <p>Case study: Diving into the Drosophila immune response with orthology and expression data</p> <p> Download the presentation</p>"},{"location":"course_material/day2/1_general/#course-gitlab-repository","title":"Course gitlab repository","text":"<p>The gitlab repository to run all the practicals is available at https://gitlab.com/evogenlab/teaching-repos/biodivinfo.</p> <p>Note</p> <p>Remember to open a Gitpod workspace before starting the practicals. Click here for more information on Gitpod workspace.</p>"},{"location":"course_material/day2/1_general/#intermediate-result-files","title":"Intermediate result files","text":"<p>If you need intermediate result files, follow this procedure on how to get them.</p>"},{"location":"course_material/day2/2_software/","title":"Software and resources","text":""},{"location":"course_material/day2/2_software/#software","title":"Software","text":"<p>These links are provided for information only, they are not needed now for the practical but if you finish any exercises early you may want to investigate the tools/resources a little further by checking out their websites, user guides, and/or their main publications.</p> <p>OrthoDB - orthology database</p> <ul> <li>Website</li> <li>Publication</li> <li>Userguide</li> </ul> <p>BUSCO - Benchmarking Universal Single-Copy Orthologues</p> <ul> <li>Website</li> <li>Publication</li> <li>Userguide</li> </ul> <p>MAFFT - multiple sequence alignment tool</p> <ul> <li>Website</li> <li>Publication</li> <li>Userguide</li> </ul> <p>TrimAl - alignment filtering tool</p> <ul> <li>Website</li> <li>Publication</li> <li>Userguide</li> </ul> <p>RAxML - maximum likelihood phylogenies</p> <ul> <li>Website</li> <li>Publication</li> <li>Userguide</li> </ul> <p>Treerecs - tree reconciliation software</p> <ul> <li>Website</li> <li>Publication</li> <li>Userguide</li> </ul> <p>CAFE - computational analysis of gene family evolution</p> <ul> <li>Website</li> <li>Publication</li> <li>Userguide</li> </ul> <p>iTOL - online phylogenetic tree viewer</p> <ul> <li>Website</li> <li>Publication</li> <li>Userguide</li> </ul> <p>Chronos function of the ape package in R</p> <ul> <li>Website/Userguide</li> <li>Publication</li> </ul> <p>JalView: for multiple sequence alignment editing, visualisation and analysis</p> <ul> <li>Website</li> <li>Publication</li> </ul>"},{"location":"course_material/day2/2_software/#folder-with-intermediate-result-files","title":"Folder with intermediate result files","text":"<p>If you get stuck, you can find all intermediate results files in the virtual gitpod workspace <code>/workspace/biodivinfo/data/</code>. Simply fetch the correct output files in order to continue with the next steps of the practical:</p> <ul> <li> <p>Use the copy <code>cp</code> command from the terminal in gitpod, e.g.: <code>cp /workspace/biodivinfo/data/the_file_you_want_to_copy path/to/destination/</code></p> </li> <li> <p>If the files are zipped (i.e. if the name ends with <code>.zip</code>), you can uncompress them with: <code>unzip /path/to/file.zip</code></p> </li> </ul>"},{"location":"course_material/day2/3_busco/","title":"BUSCO - the what, why, and how!","text":""},{"location":"course_material/day2/3_busco/#aim","title":"Aim","text":"<p>Use BUSCO to assess the quality of different types of genomic data.</p>"},{"location":"course_material/day2/3_busco/#learning-outcomes","title":"Learning outcomes","text":"<ul> <li>What are the different BUSCO modes and when should you use them?</li> <li>What are the BUSCO outputs and where to find them?</li> </ul>"},{"location":"course_material/day2/3_busco/#introduction","title":"Introduction","text":"<p>In 2013 I was working on producing genome assemblies for 16 Anopheles mosquitoes, back then we only had short-read technologies and we needed to find a way to assess the quality of the genomes we were producing. I therefore started developing what eventually became BUSCO, now one of the most widely used tools in genomics for assessing the quality of genome assemblies and annotations in terms of gene completeness.</p>"},{"location":"course_material/day2/3_busco/#assessing-genome-assemblies-for-completeness","title":"Assessing genome assemblies for completeness","text":"<p>Before we download any genomics data, let\u2019s create a working directory for this exercise, starting by opening a terminal on the Workspace if you\u2019ve not already got one open. Then, from the <code>/workspace/biodivinfo/</code> directory, create a new directory (<code>mkdir</code>) and navigate into the new directory (<code>cd</code>):</p> <pre><code>cd /workspace/biodivinfo/\nmkdir Session1\ncd Session1/\n</code></pre> <p>Now we can fetch some genome data that we wish to assess. We will work on a small genome so that it does not take too long to run the analyses, hence I have chosen Saccharomyces jurei, a newly discovered fungal species with a small genome of 12 Mbps (GenBank assembly GCA_900290405.1) that can be found on the NCBI.</p> <p>The summary statistics are already provided by the NCBI, but not the BUSCO evaluations:</p> <p>Questions:</p> <ul> <li>What is the \u201cScaffold N50\u201d and what does it mean?</li> <li>What is the \u201cScaffold L50\u201d and what does it mean?</li> </ul> Answer <p>The N50 is the shortest contig length that needs to be included for covering 50% of the genome. The L50 is the count of smallest number of contigs whose length sum makes up half of a genome size. More information here.</p> <p>We will use the <code>curl</code> command and the NCBI Datasets framework to fetch the genome assembly in FASTA format and then unzip the downloaded file:</p> <pre><code>curl -OJX GET \"https://api.ncbi.nlm.nih.gov/datasets/v2alpha/genome/accession/GCA_900290405.1/download?include_annotation_type=GENOME_FASTA&amp;filename=GCA_900290405.1.zip\" -H \"Accept: application/zip\"\nunzip GCA_900290405.1.zip\n</code></pre> <p>We will take a look at the first few lines of the FASTA file: <pre><code>head ncbi_dataset/data/GCA_900290405.1/GCA_900290405.1_SacJureiUoM1_genomic.fna\n</code></pre></p> <p>Now we have the genome, we can run BUSCO assessments in the genome mode to quantify gene completeness of this genome assembly.</p> <p>The four main required input options for us therefore are:</p> <ul> <li><code>-i ncbi_dataset/data/GCA_900290405.1/GCA_900290405.1_SacJureiUoM1_genomic.fna</code></li> <li><code>-o SacJurei</code></li> <li><code>-m genome</code></li> <li><code>-l eukaryota_odb10</code></li> </ul> <p>We will also specify the job to use 4 CPUs in order to speed up the task: <code>-c 4</code></p> <p>The whole command will thus be: <pre><code>busco -i ncbi_dataset/data/GCA_900290405.1/GCA_900290405.1_SacJureiUoM1_genomic.fna -o SacJurei -m genome -l eukaryota_odb10 -c 4\n</code></pre></p> <p>On the terminal you can see which steps BUSCO is executing:</p> <ul> <li>Configuration</li> <li>Dataset download</li> <li>Metaeuk: this is the default \u201cgene finding\u201d approach</li> </ul> <p>Question: What other \u201cgene finding\u201d approaches are possible to use with BUSCO?</p> Answer <p>2 other gene finding approaches are implemented in BUSCO: Augustus (<code>--augustus</code> flag) and Miniprot (<code>--miniprot</code> flag).</p> <p>Which BUSCO lineage to choose?</p> <p>We used the \u201ceukaryota\u201d dataset:</p> <ul> <li>eukaryota_odb10: 255 BUSCOs<ul> <li>fungi_odb10: 758 BUSCOs<ul> <li>ascomycota_odb10: 1706 BUSCOs<ul> <li>saccharomycetes_odb10: 2137 BUSCOs</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>Question: Why would you want to use a more specific or a less specific lineage dataset for your BUSCO evaluations?</p> Answer <p>Testing a genome with a more specific lineage dataset will make BUSCO look for clade-specific genes and thus will find more genes. Testing with a less specific lineage dataset will make BUSCO look for genes that are present in a lot of species, thus restricting the number of genes. These genes usually have key functions such as transcription, translation\u2026</p> <p>The analysis continues with the following steps being printed to the terminal:</p> <ul> <li>Once metaeuk (first round) is completed, then</li> <li>The hmmsearch step follows</li> </ul> <p>Question: What is the hmmsearch step doing?</p> Answer <p>It searches for sequence homologs between the BUSCO database and the genome to evaluate.</p> <p>The analysis continues with the following steps being printed to the terminal:</p> <ul> <li>The extraction of missing and fragmented buscos</li> <li>A second round of metaeuk predictions</li> <li>Then a second round of hmmsearch follows</li> <li>To finally give the results</li> </ul> <p>The analysis should take about 8 minutes to complete.</p> <p>If BUSCO failed, you can get the file from the folder with data files for the practical instead</p> <pre><code>cp /workspace/biodivinfo/data/Session1/SacJurei.zip .\nunzip SacJurei.zip\n</code></pre> <p>Let\u2019s explore the results of a typical genome assembly assessment run: <pre><code>ls -l SacJurei/\n</code></pre></p> <p>Here\u2019s a short summary of the files created by BUSCO:</p> <ul> <li>logs: useful if something went wrong</li> <li>short_summary.specific.eukaryota_odb10.SacJurei.txt: open the file in the text editor (pink, explorer)<ul> <li>Indicates the lineage dataset that was used (blue)</li> <li>Summarises the main results (green)</li> <li>Provides some assembly statistics (yellow)</li> <li>Lists the versions of all the tools used during this run (orange)</li> </ul> </li> </ul> <ul> <li>short_summary.specific.eukaryota_odb10.SacJurei.json: JSON version of the previous file</li> <li> <p>run_eukaryota_odb10: folder with the full results from the run</p> <p> </p> <ul> <li>busco_sequences:: PROTEIN and DNA sequences provided<ul> <li>fragmented_busco_sequences</li> <li>multi_copy_busco_sequences</li> <li>single_copy_busco_sequences</li> </ul> </li> <li>full_table.tsv: details of status (Complete, Duplicated, Fragmented, or Missing), genomic locations, scores, and lengths of all searched BUSCOs</li> </ul> <p> </p> <ul> <li>hmmer_output: searching predicted proteins against BUSCO profiles<ul> <li>initial_run_results</li> <li>Rerun_results</li> </ul> </li> <li>metaeuk_output: the gene prediction results<ul> <li>combined_nucl_seqs.fas</li> <li>combined_pred_proteins.fas</li> <li>initial_results</li> <li>refseq_db_rerun.faa</li> <li>Rerun_results</li> </ul> </li> <li>missing_busco_list.tsv: the BUSCOs that were never found</li> </ul> </li> </ul> <p>Let\u2019s plot the results of a typical genome assembly assessment run. BUSCO provides R scripts to produce basic plots that summarise the results. Normally you would want to summarise the results from several assessments, e.g. the same genome with different lineage datasets, or different versions of your genome assembly build with different workflows/parameters, or the assessments of the genome assemblies of several species side-by-side.</p> <p>Therefore we need to copy our short summary file into a new folder:</p> <pre><code>mkdir BUSCO_summaries\ncp SacJurei/short_summary.specific.eukaryota_odb10.SacJurei.txt BUSCO_summaries/\n</code></pre> <p>Note</p> <p>Make sure you are still in the <code>Session1</code> directory! You can use the command <code>pwd</code> to check where you are located.</p> <p>Run the python script to plot the summary: <pre><code>python3 /workspace/mambaforge/envs/course/bin/generate_plot.py -wd BUSCO_summaries\n</code></pre></p> <p>Note</p> <p>This command will produce some warnings and errors but you can ignore them - they are caused by an argument deprecation in the <code>ggplot2</code> R package.</p> <p> </p> <p>Open the resulting plot file (<code>busco_figure.png</code>) using the explorer (left panel of the window). You can zoom in/out by using Ctrl + scroll up/down (mousewheel) on the figure.</p> <p>Let\u2019s check some of these apparently missing BUSCOs:</p> <p>Search OrthoDB v10 for the missing BUSCO, 1038775at2759:</p> <p>This gene is the Eukaryotic translation initiation factor 3 subunit F. It has orthologues in 91% of eukaryotes at OrthoDB v10. Of these, it is single-copy in 89%.</p> <p>Checking other Saccharomyces species at OrthoDB in the same orthogroup, 1038775at2759, reveals that only one species of Saccharomycetaceae seems to have an orthologue of Eukaryotic translation initiation factor 3 subunit F.</p> <p>This is despite the fact that OrthoDB v10 contains 31 species of Saccharomycetaceae, strongly suggesting a real evolutionary loss of this otherwise highly conserved gene.</p> <p>This has been recognised in the literature, and indeed two of the other missing BUSCOs are the group of Subunit H orthologues, 976469at2759, and the group of Subunit M orthologues, 679771at2759.</p>"},{"location":"course_material/day2/3_busco/#assessing-genome-annotations-for-completeness","title":"Assessing genome annotations for completeness","text":"<p>Next we will run an assessment of an annotated protein set, i.e. \u201cproteins\u201d mode.</p> <p>Question: What is the difference between \u201cproteins\u201d mode and \u201ctranscriptome\u201d mode?</p> Answer <p>The \u201cproteins\u201d mode assesses a gene set, while the \u201ctranscriptome\u201d mode assesses assembled transcripts, which requires either tBLASTn (for prokaryotes) or Metaeuk (for eukaryotes).</p> <p>For this exercise we will look at the human body louse, Pediculus humanus corporis (GenBank assembly GCF_000006295.1) that can be found on the NCBI. The NCBI reports a total of 10\u2018773 protein-coding genes, which is a somewhat small number of genes compared to many other insect genomes.</p> <p>We will use the <code>curl</code> command and the NCBI Datasets framework to fetch the genome annotations file in FASTA format and then unzip the downloaded file:</p> <pre><code>curl -OJX GET \"https://api.ncbi.nlm.nih.gov/datasets/v2alpha/genome/accession/GCF_000006295.1/download?include_annotation_type=PROT_FASTA&amp;filename=GCF_000006295.1.zip\" -H \"Accept: application/zip\"\nunzip GCF_000006295.1.zip\n</code></pre> <p>Hint</p> <p>If the prompt asks if you wish to replace some files, just say yes, type <code>A</code> and then enter return (this is because we previously downloaded a genome from NCBI).</p> <p>The four main required input options for us therefore are:</p> <ul> <li><code>-i ncbi_dataset/data/GCF_000006295.1/protein.faa</code></li> <li><code>-o Pediculus</code></li> <li><code>-m proteins</code></li> <li><code>-l arthropoda_odb10</code></li> </ul> <p>We will also specify the job to use 4 CPUs in order to speed up the task: <code>-c 4</code></p> <p>The whole command will thus be: <pre><code>busco -i ncbi_dataset/data/GCF_000006295.1/protein.faa -o Pediculus -m proteins -l arthropoda_odb10 -c 4\n</code></pre></p> <p>The job starts by configuring the environment, then fetching the \u201carthropoda_odb10\u201d lineage dataset, and then launching the hmmsearch jobs:</p> <p>Question: Why does BUSCO this time go directly into the hmmsearch steps and not start with the gene prediction (metaeuk) steps?</p> Answer <p>The genes are already annotated, hence there is no need to predict them.</p> <p>When the 1013 searches are complete, the final results are displayed:</p> <p>Question: Despite the \u201clow\u201d number of genes in this genome, what can we say about the completeness of this annotation set?</p> Answer <p>This annotation set seems very complete, with a lot of single-copy BUSCOs (96.4%) and very few duplicated (0.3%) or missing (0.8%) BUSCOs.</p> <p>If BUSCO failed, you can get the file from the folder with data files for the practical instead</p> <pre><code>cp /workspace/biodivinfo/data/Session1/Pediculus.zip .\nunzip Pediculus.zip\n</code></pre> <p>Use the explorer to see the output files and folders. Although they are similar to when we ran a genome assembly assessment, note this time there are no \u201cmetaeuk\u201d results folders, only the sequences and the hmmer_output, along with the table, list and summary files.</p> <p>If you want, you can once again plot the results of the BUSCO run: <pre><code>cp Pediculus/short_summary.specific.arthropoda_odb10.Pediculus.txt BUSCO_summaries/\npython3 /workspace/mambaforge/envs/course/bin/generate_plot.py -wd BUSCO_summaries\n</code></pre></p> <p>Note</p> <p>This will produce a single plot containing the results of both BUSCO runs, SacJurei and Pediculus. Keep in mind that these runs were performed with different modes (genome vs proteins), hence represent different results!</p> <p>There are only 8 \u201cmissing\u201d BUSCOs from this annotation set. Searching OrthoDB v10 for the first one, 127998at6656, shows it to be Ribosomal protein L7A/L8, an otherwise highly-conserved gene (168 of 172 arthropods).</p> <p>I thought that this was probably unlikely to be a real missing gene, so I searched the genome using the Drosophila melanogaster orthologue and I found a good hit in the Pediculus genome assembly, in a region where no gene was annotated! I therefore used the available transcriptomics data (blue) to create a manual annotation for this gene (green), so one day when manual annotations make their way into official gene sets at the NCBI this gene will no longer appear as \u201cmissing\u201d when performing an assessment of the annotated gene set.</p> <p>A sequence alignment with orthologues from other species convinces me that I have managed to correctly annotate the complete gene in Pediculus.</p> <p>A cautionary note about alternative transcripts</p> <ul> <li>We used the Pediculus annotation from the NCBI</li> <li>We did no pre-filtering of this annotation set to select just one protein representative per gene</li> </ul> <p>Question: Why would we normally want to select just one protein representative per gene when running an assessment of an annotation set?</p> Answer <p>Keeping all the isoforms of a gene will artificially increase the number of Duplicated BUSCOs and lead to a biased assessment of the annotation set.</p> <p>We can actually count the number of proteins in the Pediculus protein FASTA file to see if this affects our analysis: <pre><code>grep -c '&gt;' ncbi_dataset/data/GCF_000006295.1/protein.faa\n</code></pre></p> <p>This tells us there are 10\u2018775 proteins in this file, but remember that the NCBI page indicated that there were 10\u2018773 protein-coding genes in this annotation set:</p> <ul> <li>In this case therefore there is at least one gene, possibly two genes, with alternative transcripts annotated</li> <li>So here the impact on our analysis will be negligible if anything</li> </ul> <p>The NCBI are working on providing \u201creference\u201d annotation sets that contain one selected representative protein per gene. For now though you would have to perform the filtering yourself if you wanted to ensure the \u201cduplication\u201d values produced by BUSCO make sense in terms of reporting real gene duplications rather than alternative protein products of a single gene.</p>"},{"location":"course_material/day2/4_homology/","title":"Homology, Orthology, & Paralogy","text":""},{"location":"course_material/day2/4_homology/#aim","title":"Aim","text":"<p>Build a molecular species phylogeny using orthologues identified from an orthology database.</p>"},{"location":"course_material/day2/4_homology/#learning-outcomes","title":"Learning outcomes","text":"<ul> <li>What is needed as input to build a molecular species phylogeny?</li> <li>How do we have confidence in such a species tree?</li> </ul>"},{"location":"course_material/day2/4_homology/#collecting-input-data-from-an-orthology-database","title":"Collecting input data from an orthology database","text":"<p>There are many publicly accessible orthology databases, or tools that can be used to delineate orthology with your own datasets. Today, we will use data from OrthoDB. OrthoDB is part of the SwissOrthology resource.</p> <p>From your browser, search for orthodb.org or go to https://www.orthodb.org/. We will use the OrthoDB website to select our species/clade of interest and query the database to retrieve orthologous groups that we can use to build a species tree.</p> OrthoDB v11 homepage <p>Because the beetles are wonderful, we will use them as the example group for exploring the orthology data and building our molecular species tree. We will therefore used the  navigation tool of OrthoDB to narrow our search to available beetle species (Coleoptera): Eukaryota \u21d2 Metazoa \u21d2 Arthropoda \u21d2 Hexapoda \u21d2 Insecta \u21d2 Holometabola \u21d2 Coleoptera.</p> <p>The <code>Search at:</code> and <code>Species to display:</code> boxes should be automatically updated now to show \u201cColeoptera\u201d and \u201call 15 selected\u201d. Click <code>Submit</code> with no search terms to first retrieve all orthologous groups delineated across these 15 species of beetles.</p> <p>For the orthologous groups returned by the query, summary information is displayed:</p> <ul> <li>Orthologous group names/descriptions (if available)</li> <li>Counts of genes and species per orthologous group</li> </ul> <p>Question: How many groups in total are returned? What kinds of orthologous groups would we need to find if we want to build a species tree, and why?</p> Answer <p>14753 groups are returned. However, it is best to use single-copy orthologues to build a species tree, because they easily allow to calculate the exact evolutionary distance between sequences. Using multi-copy orthologues drastically complicates things as you cannot be sure of the homology relationships between all the genes (orthology vs paralogy).</p> <p>We can use the <code>Advanced</code> navigation tool of OrthoDB to narrow our search for orthologous groups that will be useful for building a species phylogeny. Using the \u201cPhyloprofile\u201d filter we can ask the query to return only orthologous groups that are \u201cPresent in all species\u201d and that are \u201cSingle-copy in all species\u201d. Click <code>Submit</code> with no search terms to retrieve all orthologous groups delineated across these 15 species of beetle, now with the phyloprofile filtered set.</p> <p>Note</p> <p>Direct URL in case the search with filters failed for you.</p> Results of the filtered query <p>Question: Did the filtering work - how do you know? How many groups in total are now returned? Why are there so few groups compared to the last query that returned all orthologous 14\u2018753 groups?</p> Answer <p>The filtering worked: we now have only 1225 groups, all composed of 1 gene per species. The previous query returned more results because a lot of groups contained genes in several but not all species, and these groups were filtered out during this search.</p> <p>Explore some specific results of your query, e.g. the ones for group 10000at7041 described as \u201cphosphatidylinositol 4-kinase beta\u201d:</p> <ul> <li>The Group hierarchy view allows navigating back up the tree of life to the metazoan last common ancestor</li> </ul> <ul> <li>Functional descriptions list Gene Ontology (GO) terms and InterPro domains that have been mapped to genes belonging to this orthologous group. They provide clues as to the likely function of all genes in the orthologous group</li> </ul> <ul> <li>Evolutionary descriptions summarise the group\u2019s phyletic profile, its relative rate of protein sequence divergence, and the \u201caverage\u201d gene architecture (structure in terms of introns and exons and total length in amino acids)</li> </ul> <p>Expand the Orthologs by organism table to view members of this orthologous group:</p> <p>Questions:</p> <ul> <li>What is the average length (AAs) of these proteins? Are there any substantially longer or shorter proteins than the average?</li> <li>Why might some be rather different from the average? What impacts could this have when it comes to using these sequences for building a phylogeny?</li> </ul> Answer <p>The average length of these proteins is ~930 AAs. There are no substantially longer proteins, but we can notice much shorter proteins (349 AAs, 613 AAs\u2026) that are displayed with one or two exclamation marks <code>!</code> depending on the length difference. These short proteins might be real but more likely, they indicate an annotation problem (for example a case of automatic annotation that did not pick-up the full length protein). These proteins can severely impact species tree creation because they will cause a bias in the multiple alignment step.</p> <p>Additional information about each gene can be viewed by clicking on the chevron buttons <code>&gt;</code> or <code>&gt;&gt;</code>, e.g. for the Tribolium castaneum orthologue:</p> <p>Before we download any orthology data, let\u2019s create a working directory for this exercise, starting by opening a terminal on the Workspace if you\u2019ve not already got one open. Then, from the <code>/workspace/biodivinfo/</code> directory, create a new directory (<code>mkdir</code>) and navigate into the new directory (<code>cd</code>):</p> <pre><code>cd /workspace/biodivinfo/\nmkdir Session2\ncd Session2/\n</code></pre> <p>To build a phylogeny we need to download the sequences: on the top right of each orthologous group view you can access the protein sequences using \u201cView Fasta\u201d.</p> <p>A new tab will open displaying the protein sequences, copy the URL of the page so we can use it to download the sequences directly in the next step.</p> <p>Now fetch the fasta formatted sequences from OrthoDB from the command line using <code>curl</code>, give the downloaded fasta data a filename (-o) using the orthologous group ID \u201c10000at7041.fasta\u201d and make sure that the URL is placed inside quotes: <pre><code>curl -o 10000at7041.fasta \"https://data.orthodb.org/v11/fasta?id=10000at7041&amp;species=7041\"\n</code></pre></p> <p>If fetching from OrthoDB failed, you can get the file from the folder with data files for the practical instead</p> <pre><code>cp /workspace/biodivinfo/data/Session2/10000at7041.fasta .\n</code></pre> <p>Use the file explorer on the Workspace to view the downloaded fasta file.</p> <p>We need to replace the colon \u201c_0:\u201d in the protein identifiers with an underscore \u201c_0_\u201d because some downstream tools do not accept colons in identifiers. We will perform such replacement using the command line function <code>sed</code>: <pre><code>sed -i 's/_0:/_0_/g' 10000at7041.fasta\n</code></pre></p> Note how there are now no longer any colons in the identifiers"},{"location":"course_material/day2/4_homology/#building-a-tree-from-single-copy-orthologues","title":"Building a tree from single-copy orthologues","text":"<p>There are many different software tools available for sequence alignment and phylogenetics, the logic however remains basically the same no matter the software, we need to:</p> <ul> <li>Align all the protein sequences as a multiple sequence alignment: we use MAFFT</li> <li>Filter/trim the alignment to keep only well-aligned regions: we use TrimAl</li> <li>Use the filtered alignment to build a molecular phylogeny: we use RAxML</li> </ul>"},{"location":"course_material/day2/4_homology/#multiple-sequence-alignment-using-mafft","title":"Multiple sequence alignment using MAFFT","text":"<p>The basic command for running MAFFT is:</p> <p>We can run MAFFT in the \u201cquiet\u201d mode to avoid progress reports (<code>--quiet</code>). We can proceed to build the alignment from the command line as follows, naming the output alignment file appropriately by adding <code>.aln.</code> to the output filename: <pre><code>mafft --quiet --auto 10000at7041.fasta &gt; 10000at7041.aln.fasta\n</code></pre></p> <p>Use the file explorer on the Workspace to open the multiple sequence alignment file.</p> <p>If MAFFT failed, you can get the file from the folder instead</p> <pre><code>cp /workspace/biodivinfo/data/Session2/10000at7041.aln.fasta .\n</code></pre> <p>You might otherwise use your favourite alignment viewer (e.g. JalView) for a more colourful and meaningful visualisation. To download the file from the Workspace, find the file in the explorer, right-click on the file, and select <code>Download</code>.</p> <p>Here are two examples of the JalView visualisation:</p> First ~200 columns of the alignment Last ~200 columns of the alignment <p>Questions:</p> <ul> <li>From the two visualisations above showing the start and then the end of the alignment - which end seems more complete and well-aligned?</li> <li>What do you think an alignment region would need to have in order to be most useful for reconstructing the phylogeny, and why?</li> </ul> Answer <p>The end of the alignment seems more complete and well-aligned. To reconstruct the phylogeny, an alignment region should not have too many mutations: if there are no common regions between the proteins, they will be impossible to align to each other and it will impossible to build the phylogeny. On the other hand, an alignment without mutations should also be avoided because it contains no signal to discriminate between species.</p>"},{"location":"course_material/day2/4_homology/#filtertrim-using-trimal","title":"Filter/trim using TrimAl","text":"<p>We could manually go through the multiple sequence alignment and select regions that we think would be the best to use for building the phylogeny - but this is very subjective and not at all reproducible. Therefore there are several tools designed to help select \u201cuseful\u201d regions from multiple sequence alignments and extract them to use for subsequent tree building steps.</p> <p>The basic command for running TrimAl is:</p> <p>TrimAl has many parameters that one can tune depending on your input dataset, as well as a few \u201cdefault\u201d options such as:</p> <ul> <li><code>-nogaps</code>: remove all positions with gaps in the alignment</li> <li><code>-strict</code>: use automatic selection on \u201cstrict\u201d mode</li> <li><code>-automated1</code>: use a heuristic selection of the automatic method based on similarity statistics</li> </ul> <p>Here we will use the <code>-automated1</code> option, a heuristic approach that selects the best automatic method to trim a given alignment, and is optimised for trimming alignments that will be analysed by Maximum Likelihood phylogenetic analyses. The output filename we will label with <code>.trm.</code> i.e. after trimming has been performed. We will also ask TrimAl to print out an HTML output to visualise the regions selected and rejected from the input full alignment: <pre><code>trimal -in 10000at7041.aln.fasta -out 10000at7041.aln.trm.fasta -automated1 -htmlout 10000at7041.aln.trm.html\n</code></pre></p> <p>You can now download (same as how you downloaded the alignment before trimming) and open 10000at7041.aln.trm.html (e.g. Firefox or another browser) to view the results.</p> <p>If trimAl failed, you can get the files from the folder instead</p> <pre><code>cp /workspace/biodivinfo/data/Session2/10000at7041.aln.trm.fasta .\ncp /workspace/biodivinfo/data/Session2/10000at7041.aln.trm.html .\n</code></pre> <p>TrimAl\u2019s HTML output shows the regions selected (<code>Selected Cols:</code> highlighted in grey) and the regions rejected during the filtering process:</p>"},{"location":"course_material/day2/4_homology/#phylogeny-building-using-raxml","title":"Phylogeny building using RAxML","text":"<p>We will now use the filtered alignment as input to RAxML to build a Maximum Likelihood phylogeny. Because we have single-copy orthologues - one from each of our 15 beetle species - we can have some expectation that this gene tree would represent the species tree.</p> <p>For reference, species names and their OrthoDB taxonomic identifiers:</p> OrthoDB taxonomic identifiers Species name Beautiful beetles 110193_0 Nicrophorus vespilloides 115357_0 Harmonia axyridis 116153_0 Aethina tumida 1629725_0 Oryctes borbonicus 166361_0 Onthophagus taurus 217634_0 Anoplophora glabripennis 224129_0 Agrilus planipennis 41139_0 Coccinella septempunctata 41895_0 Tribolium madens 50390_0 Diabrotica virgifera 7048_0 Sitophilus oryzae 7054_0 Photinus pyralis 7070_0 Tribolium castaneum 7539_0 Leptinotarsa decemlineata 77166_0 Dendroctonus ponderosae <p>RAxML has many options! View the summary of parameters/options using the <code>-h</code> flag, for the full explanations you\u2019ll need to check out the RAxML manual later: <pre><code>raxmlHPC-SSE3 -h | more\n</code></pre></p> <p>The three main required input options are:</p> <ul> <li><code>-s sequenceFileName</code>: your filtered alignment file</li> <li><code>-n outputFileName</code>: the name you want to give the output files</li> <li><code>-m substitutionModel</code>: the substitution model you want RAxML to use</li> </ul> <p>Phylogeny estimation using protein sequences requires the selection of a protein substitution model. Divergence among sequences can be modelled with a matrix that describes probabilities of amino acid substitutions (mutations that cause one amino acid to be replaced by another). This corresponds to a model of evolution in which amino acids mutate randomly and independently from one another but according to some predefined probabilities depending on the properties of the amino acid itself.</p> <p>We will use the JTT (Jones-Taylor-Thornton) with the GAMMA model of rate heterogeneity: <code>PROTGAMMAJTT</code>. For speed in the class we will also specify that RAxML should use its rapid bootstrap algorithm to conduct a rapid bootstrap analysis and search for the best-scoring ML tree in one single programme run: <code>-f a</code>, we also need to indicate how many bootstraps RAxML should perform: <code>-N 10</code> (normally many more, but for the class we will perform only 10 samples). For reproducibility of the optimisation steps, RAxML additionally requires us to define the random starting seed for parsimony e.g. <code>-p 12345</code> and for the subsequent ML search e.g. <code>-x 12345</code>.</p> <p>Launch RAxML with the options defined for a rapid bootstrap &amp; ML analysis: <pre><code>raxmlHPC-SSE3 -s 10000at7041.aln.trm.fasta -f a -N 10 -p 12345 -x 12345 -m PROTGAMMAJTT -n 10000at7041\n</code></pre></p> <p>RAxML should take less than 2 minutes to estimate the phylogeny with 10 bootstrap samples, printing the progress log to the terminal.</p> <p>Question: What is \u201cbootstrap analysis\u201d and why would we be interested in running it?</p> Answer <p>Bootstrapping is a type of test that uses random sampling with replacement (resampling methods) - it uses sampling with replacement to assess the reliability of sequence-based phylogenies. Bootstrap values in a phylogenetic tree indicate how many times the same branch is observed when repeating the generation of a phylogenetic tree on a resampled set of data and thus give information about the stability of the tree structure (i.e. the branching order). In bootstrap resampling, we generate artificial sequences by randomly sampling sites of the original sequences with replacement to produce a different composition of the data with the same sequence length as the original alignment.</p> <p>If RAxML failed, you can get the files from the folder instead</p> <pre><code>cp /workspace/biodivinfo/data/Session2/RAxML_bestTree.10000at7041 .\ncp /workspace/biodivinfo/data/Session2/RAxML_bipartitions.10000at7041 .\ncp /workspace/biodivinfo/data/Session2/RAxML_bipartitionsBranchLabels.10000at7041 .\ncp /workspace/biodivinfo/data/Session2/RAxML_bootstrap.10000at7041 .\ncp /workspace/biodivinfo/data/Session2/RAxML_info.10000at7041 .\n</code></pre> <p>RAxML output:</p> <ul> <li><code>_bestTree</code>: best-supported phylogeny</li> <li><code>_bipartitions</code>: best tree with bootstrap results on nodes</li> <li><code>_bipartitionsBranchLabels</code>: best tree with bootstrap results on branches</li> <li><code>_bootstrap</code>: tree from each bootstrap sample</li> <li><code>_info</code>: information on the analysis performed</li> </ul> <p></p> <p>Now we will visualise the results: the phylogenetic tree. Open the \u201cbipartitions\u201d file (<code>RAxML_bipartitions.10000at7041</code>) and copy the contents (the newick-format tree).</p> <p>In your browser go to the iTOL Interactive Tree Of Life website and open the <code>Upload</code> page from the main navigation bar.</p> <p>Enter a <code>Tree name</code>, e.g. <code>tree1</code>. Paste the RAxML result bipartitions tree into the <code>Tree text:</code> box. Click <code>Upload</code> to load your tree onto the iTOL platform.</p> <p>By default, your tree should be displayed similarly to this one:</p> <p>Use the <code>Control Panel</code> on the right of the tree to select the <code>Advanced</code> tab and choose to display <code>Bootstraps</code> as <code>Text</code>.</p> <p>If you did not manage to visualise the tree</p> <p>You can find it on Gitpod at <code>/workspace/biodivinfo/data/Session2/tree_10000at7041.jpg</code>. Or you can directly see it here.</p> <p>Questions:</p> <ul> <li>Why would some nodes obtain 100% bootstrap support while others are weaker and others are very low indeed?</li> <li>How can we know if our \u201cspecies tree\u201d, made from just one single-copy orthologous group, reflects the reality of these species\u2019 evolutionary relationships?</li> <li>What would we need to do next in order to improve the confidence in our molecular \u201cspecies phylogeny\u201d?</li> </ul> Answer <ul> <li>Some nodes are very stable and do not change during bootstrap while others do. These weakers nodes indicate that the branching varies and may not be an accurate representation of the species tree</li> <li>We can compare the tree with what is known in the literature. Alternatively, we can compare this tree with species tree made from other single-copy orthologous groups. If all the trees concur, this is a very strong indicator of the species\u2019 evolutionary relationships</li> <li>Create trees from other single-copy orthologous groups and reconcile them with a tree from the literature if it exists.</li> </ul>"},{"location":"course_material/day2/5_reconciliation/","title":"Gene-Tree-Species-Tree Reconciliation","text":""},{"location":"course_material/day2/5_reconciliation/#aim","title":"Aim","text":"<p>Convert the molecular species phylogeny into an ultrametric time-calibrated species tree and use this for gene-tree-species-tree reconciliation.</p>"},{"location":"course_material/day2/5_reconciliation/#learning-outcomes","title":"Learning outcomes","text":"<ul> <li>What is the difference between a molecular and a time-calibrated phylogeny?</li> <li>What are gene-tree-species-tree reconciliation algorithms trying to achieve and how?</li> </ul>"},{"location":"course_material/day2/5_reconciliation/#building-an-ultrametric-time-calibrated-species-tree","title":"Building an ultrametric time-calibrated species tree","text":"<p>There are several tools available for converting molecular phylogenies to ultrametric time-calibrated trees. They usually require as input your molecular phylogeny as well as calibration points (estimates usually from fossils about the ranges of likely divergence times) for one or more nodes on the tree. We will use the chronos function of the ape package in R.</p> <p>Before we explore the tree, let\u2019s create a working directory for this exercise, starting by opening a terminal on the Workspace if you\u2019ve not already got one open. Then, from the <code>/workspace/biodivinfo/</code> directory, create a new directory (<code>mkdir</code>) and navigate into the new directory (<code>cd</code>):</p> <pre><code>cd /workspace/biodivinfo/\nmkdir Session3\ncd Session3/\n</code></pre> <p>Using the same set of 15 beetle species, but now applying the concatenation approach to be able to use alignments from 1\u2018000 single-copy orthologous groups:</p> <ul> <li>Aligned each orthogroup</li> <li>Filtered/trimmed each orthogroup</li> <li>Concatenated the trimmed alignments into a superalignment</li> <li>Used RAxML to compute, with bootstraps, the molecular species phylogeny</li> </ul> <p>This took several hours to run, therefore we are not going to try this in the class. Instead, the results are provided for you here and also pasted below, where the tree has been rooted based on the known outgroup species (<code>7054_0</code> &amp; <code>224129_0</code>) and where internal labels and species names have been added to make it easier to interpret and compare with the current understanding of beetle phylogeny.</p> <p>Here is the molecular species tree in Newick format: <pre><code>((((((((50390_0_Diabrotica_virgifera:0.15666,7539_0_Leptinotarsa_decemlineata:0.15804)100:0.05974,217634_0_Anoplophora_glabripennis:0.11339)Chrysomeloidea[100]:0.04091,(7048_0_Sitophilus_oryzae:0.12494,77166_0_Dendroctonus_ponderosae:0.13601)Curculionoidea[100]:0.13858)100:0.02727,116153_0_Aethina_tumida:0.24260)100:0.03487,(115357_0_Harmonia_axyridis:0.06618,41139_0_Coccinella_septempunctata:0.07128)Coccinelloidea[100]:0.17882)88:0.01976,(41895_0_Tribolium_madens:0.02321,7070_0_Tribolium_castaneum:0.02060)Tenebrionoidea[100]:0.28640)100:0.09637,(110193_0_Nicrophorus_vespilloides:0.33251,(1629725_0_Oryctes_borbonicus:0.22252,166361_0_Onthophagus_taurus:0.24064)Scarabaeoidea[100]:0.07437)100:0.05341):0.00483,(224129_0_Agrilus_planipennis:0.31846,7054_0_Photinus_pyralis:0.29250):0.09174)100;\n</code></pre></p> <p>Newick format - Wikipedia</p> <ul> <li>Parentheses indicate hierarchical relationships amongst species</li> <li>Branches can be labelled with bootstrap values, e.g. 100</li> <li>Branches can also be labelled with names, e.g. Tenebrionoidea</li> <li>Notice the semicolon at the end of the tree - it is often forgotten but most tools won\u2019t recognize a file as Newick format if it\u2019s missing!</li> </ul> <p>You can also copy the file from the provided data folder: <pre><code>cp /workspace/biodivinfo/data/Session3/Step1/OGs-1000-moltree-names-rooted.tre .\n</code></pre></p> <p>Now to visualise the tree we will, as before, copy and paste this molecular species phylogeny to upload it to iTOL.</p> <p>Use the iTOL <code>Advanced Control Panel</code> to turn on <code>Display</code> of <code>Node IDs</code> and turn on <code>Display</code> as <code>Text</code> the <code>Bootstraps</code>.</p> <p>Notice that now there is only one node that did not converge to 100% bootstrap support - regarding the placement of the groups of Tenebrionoidea &amp; Coccinelloidea.</p> <p>If you did not manage to visualise the tree</p> <p>You can find it on Gitpod at <code>/workspace/biodivinfo/data/Session3/Step1/tree_1000_OGs.jpg</code>. Or you can directly see it here.</p> <p>We now need to compare our tree to the literature to see if it is in agreement with the current thinking regarding the relations amongst beetle lineages.</p> <p>For comparison with the latest beetle phylogeny from the literature (see below):</p> <p>You should be able to find the internal node labels, provided for you on the tree you have just uploaded on iToL:</p> <p>Question: Does our 1\u2018000-orthogroup molecular species phylogeny agree with the current understanding of species relationships (see phylogeny below)?</p> Answer <p>Yes! Remember you can invert two branches of a node to facilitate the comparison between the two trees!</p> Recent reference on Coleoptera phylogeny: Integrated phylogenomics and fossil data illuminate the evolution of beetles, Cai et al. 2022  <p>Note</p> <p>Link to Cai et al. 2022.</p> <p>We can now convert our molecular phylogeny to an ultrametric time-calibrated tree using the <code>chronos</code> function of the <code>ape</code> package.</p> <p>Chronos: Molecular Dating by Penalised Likelihood and Maximum Likelihood</p> <ul> <li><code>chronos</code> is the main function fitting a chronogram to a phylogenetic tree whose branch lengths are in number of substitution per sites</li> <li><code>makeChronosCalib</code> is a tool to prepare data frames with the calibration points of the phylogenetic tree</li> </ul> <p>We could provide multiple calibration points to smooth the tree, but for today we will just find an estimate for the root age and use that as the only calibration point. We can use TimeTree.org to find a divergence estimate for any two beetle species in our collection that span the root of our tree, e.g. the age of the last common ancestor of Agrilus planipennis and Leptinotarsa decemlineata.</p> <p>TimeTree provides us with an \u201cAdjusted Time\u201d for the pairwise divergence time for Agrilus Planipennis and Leptinotarsa Decemlineata of 256 Million Years Ago (MYA).</p> <p>The R code for running chronos is provided here: <pre><code># Converting a molecular species phylogeny into a time-calibrated species tree\n# If you do not have 'ape' you will need to install it: install.packages(\"ape\")\n\n# Load ape package\nlibrary(ape)\n\n# Read in the molecular phylogeny\n# Make sure you are working in the same directory as the tree file\nmoltree&lt;-read.tree(\"OGs-1000-moltree-names-rooted.tre\")\n\n# Provide root calibration age of 256 million years\ncalib&lt;-makeChronosCalib(moltree, node=\"root\", age.min=256)\n\n# use the chronos function to convert the tree with the age constraint\ntimtree&lt;-chronos(moltree, calibration=calib, lambda=1, model=\"discrete\", control=chronos.control(nb.rate.cat=1))\n\n# check that the result is indeed ultrametric\nis.ultrametric(timtree)\nwrite.tree(timtree, file=\"Coleoptera_TimeTree.tre\")\n</code></pre></p> <p>Or you can fetch the R script with: <pre><code>cp /workspace/biodivinfo/scripts/MolecularTree_to_TimeTree.R .\n</code></pre></p> If you want to run the script automaticallyIf you want to run the successive steps manually <pre><code>Rscript MolecularTree_to_TimeTree.R\n</code></pre> <ul> <li>Launch R: <code>R</code></li> <li>Now for actually running chronos\u2026 first you need to load the library <code>ape</code>: <code>library(\"ape\")</code></li> <li>Then you can copy the R code provided above or from the provided R script file (<code>MolecularTree_to_TimeTree.R</code>) and enter return to execute the code<ul> <li><code>read.tree</code>: read in your molecular phylogeny file</li> <li><code>makeChronosCalib</code>: set the minimum age of the root of your tree</li> <li><code>chronos</code>: smooth conversion of the \u2018moltree\u2019 to the \u2018timetree\u2019</li> <li><code>write.tree</code>: write the resulting timetree to a file (<code>Coleoptera_TimeTree.tre</code>)</li> </ul> </li> <li>To exit R simply type <code>q()</code> and then return</li> <li>No need to save your workspace image: <code>Save workspace image? [y/n/c]: n</code></li> </ul> <p>Now let\u2019s open the tree file produced by chronos (<code>Coleoptera_TimeTree.tre</code>) and use iTOL to view it (as before), you can find the file in the EXPLORER menu under Session3, copy the Newick formatted tree and go to iTOL to upload it.</p> <p>The default view looks something like this, so we can use the <code>Advanced Control Panel</code> to change the views and thereby make comparisons with the literature tree easier.</p> <p></p> <p>Use the <code>Advanced Control Panel</code> to display the tree scale in inverted direction:</p> <ul> <li><code>Internal tree scale</code><ul> <li><code>Display</code></li> <li><code>Inverted scale</code>: <code>Yes</code></li> </ul> </li> <li>Use the \u201cFit to screen\u201d button <code>[]</code> to resize your tree in the viewer</li> </ul> <p>Note how the Tree scale - measured in millions of years - goes all the way back to 256, which is the minimum root age we applied as a constraint when using chronos to build the time tree from the molecular tree.</p> <p>If you did not manage to visualise the tree</p> <p>You can find it on Gitpod at <code>/workspace/biodivinfo/data/Session3/Step1/tree_time_calibrated.jpg</code>. Or you can directly see it here.</p> <p>Question: What are the main differences between the ultrametric time-calibrated tree shown above and our input molecular phylogeny copied again here below for comparison?</p> Answer <p>The branch lengths changed because the scale unit changed: this tree is expressed in time, while the previous one was expressed in substitutions/site. As a consequence, all the branches now have the same length, which is expected because all the species had the same span of time to evolve from their last common ancestor (i.e. the root of the tree).</p> <p>Questions:</p> <ul> <li>So what does \u2018ultrametric\u2019 mean in the context of phylogenetic trees?</li> <li>What might ultrametric trees be particularly useful for in terms of analyses?</li> </ul> Answer <ul> <li>An ultrametric tree is a rooted tree with edge lengths where all leaves are equidistant from the root. Here, it depicts times of divergence and as such can also be called a \u2018chronogram\u2019</li> <li>Ultrametric trees can be useful to relate evolution events (appearance of a species, for example) with other events (drastic and brutal changes in climate, adaptation to new life conditions\u2026)</li> </ul>"},{"location":"course_material/day2/5_reconciliation/#building-a-tree-for-a-dynamic-gene-family","title":"Building a tree for a dynamic gene family","text":"<p>We will now follow the same steps that we did to compute a tree for a universal single-copy orthologous group in Session II, but this time selecting instead an orthologous group that has some species with more than one gene copy and some species missing an orthologue.</p> <p>Note</p> <p>Remember that of the 14\u2018753 Coleoptera-level orthologous groups, only 1\u2018225 were showing single-copy orthologues in all 15 species. This means that the majority of orthologous groups show some level of dynamism in terms of gene gains and losses across this set of 15 beetle species.</p> <p>Browsing OrthoDB I found an example orthologous group where some species have more than one copy and one species is lacking an orthologue: https://www.orthodb.org/?level=7041&amp;species=7041&amp;query=10261at7041.</p> <p>It contains a total of 19 genes from 14 of the 15 Coleoptera species.</p> <ul> <li>10 species = single-copy (i.e. no gene duplications)</li> <li>4 species = multi-copy (i.e. gene duplications)</li> </ul> <p>Collect the input sequences: <pre><code>curl -o 10261at7041.fasta \"https://data.orthodb.org/v11/fasta?id=10261at7041&amp;species=7041\"\n</code></pre></p> <p>Replace the colon \u201c_0:\u201d in the protein identifiers with an underscore \u201c_0_\u201c: <pre><code>sed -i 's/_0:/_0_/g' 10261at7041.fasta\n</code></pre></p> <p>If it failed, fetch the fasta file from the data files folder</p> <pre><code>cp /workspace/biodivinfo/data/Session3/Step2/10261at7041.fasta .\n</code></pre> <p>Align the protein sequences - using MAFFT like before: <pre><code>mafft --quiet --auto 10261at7041.fasta &gt; 10261at7041.aln.fasta\n</code></pre></p> <p>Filter/trim the alignment using TrimAl like before: <pre><code>trimal -in 10261at7041.aln.fasta -out 10261at7041.aln.trm.fasta -automated1 -htmlout 10261at7041.aln.trm.html\n</code></pre></p> <p>Build the gene tree using RAxML like before: <pre><code>raxmlHPC-SSE3 -s 10261at7041.aln.trm.fasta -f a -N 10 -p 12345 -x 12345 -m PROTGAMMAJTT -n 10261at7041\n</code></pre></p> <p>Hint</p> <p>Note that RAxML is warning us that there are two pairs of sequences that are exactly identical and that these would normally be excluded from the analysis.</p> <p>While RAxML is running you can download and view the trimmed alignment file (the HTML version) like we did before, to check out these identical sequences:</p> <p>Note</p> <p>If you could not download it, you can view the alignment here.</p> <ul> <li>Sequences <code>115357_0_00054b</code> and <code>115357_0_000a81</code> are exactly identical (pink)<ul> <li>Two proteins from Harmonia axyridis</li> </ul> </li> <li>Sequences <code>7048_0_00018b</code> and <code>7048_0_0001a0</code> are exactly identical (orange)<ul> <li>Two proteins from Sitophilus oryzae</li> </ul> </li> </ul> <p>Note</p> <p>These proteins are not exactly identical along their entire lengths, but they are identical along the regions selected by TrimAl to use for phylogeny reconstruction. RAxML takes just one of any set of identical proteins to use for the phylogeny reconstruction and then adds back to the final tree any exact duplicates.</p> <p>Question: Why might there be some identical or near-identical protein sequences in the genomes of some species, i.e. what does it suggest about the evolution of these genes?</p> Answer <p>These genes probably underwent a duplication very recently. Only a short span of time passed since the duplication, which explains why they are onlly a few differences between the protein sequences.</p> <p>If these steps failed, you can fetch the results files from the data folder instead</p> <pre><code>cp /workspace/biodivinfo/data/Session3/Step2/10261at7041.aln.fasta .\ncp /workspace/biodivinfo/data/Session3/Step2/10261at7041.aln.trm.fasta .\ncp /workspace/biodivinfo/data/Session3/Step2/10261at7041.aln.trm.html .\ncp /workspace/biodivinfo/data/Session3/Step2/RAxML_info.10261at7041 .\ncp /workspace/biodivinfo/data/Session3/Step2/RAxML_bootstrap.10261at7041 .\ncp /workspace/biodivinfo/data/Session3/Step2/RAxML_bipartitions.10261at7041 .\ncp /workspace/biodivinfo/data/Session3/Step2/RAxML_bestTree.10261at7041 .\n</code></pre> <p>When RAxML is finished you should have a message on the terminal that looks something like the following:</p> <p>Now we open and view the resulting gene tree with bootstrapping support values (<code>RAxML_bipartitions.10261at7041</code>) using iTOL (as before).</p> <p>Hint</p> <p>Note the two pairs of \u201cidentical\u201d proteins that RAxML warned us about earlier:</p> <p> </p> <p>To make this gene tree more visually comparable to the species tree, let\u2019s start by properly rooting the tree according to where the known outgroup species (<code>7054_0</code> &amp; <code>224129_0</code>) branch off from the rest of the species (circled in pink):</p> <p>We can use iTOL to interactively reroot the gene tree knowing the outgroup species. Click on the branch circled in pink shown above, hover over Tree structure, and then select <code>Re-root the tree here</code>.</p> <p>In the re-rooted tree the outgroup species (blue) are now clearly placed to define the root of this phylogeny:</p> <p>If you did not manage to visualise the tree</p> <p>You can find it on Gitpod at <code>/workspace/biodivinfo/data/Session3/Step2/tree_dynamic_family_rerooted.jpg</code>. Or you can directly see it here.</p> <p>Question: Can you manually (just by eye) identify where all speciation nodes, duplication nodes, and loss events have occurred based on this gene tree?</p> <p>Hint</p> <p>When the identifiers start with the same numbers it means the genes are from the same species, e.g. species <code>7048_0</code> has three orthologues in this family.</p> Answer <p>As mentioned previously, there was 2 duplication events (3 genes) within species <code>7048_0</code>. 1 duplication (2 genes) event happened within species <code>115357_0</code>. 1 speciation and 1 duplication events (4 genes) happened within species <code>7070_0</code> and <code>41895_0</code>. However, it is very hard to guess where the loss event happened with just a gene tree. It would help to have more information about the species tree.</p>"},{"location":"course_material/day2/5_reconciliation/#reconciling-the-gene-and-species-trees","title":"Reconciling the gene and species trees","text":"<p>Now we will try to see if an algorithm specifically designed to identify where all speciation nodes, duplication nodes, and loss events have occurred on a gene tree given a species tree agrees or disagrees with your manual assessments.</p> <p>The main input requirements for <code>treerecs</code> are:</p> <ul> <li>A species phylogeny of all species: this can have more species than the gene tree but all species in the gene tree must be present in the species tree<ul> <li>We have the ultrametric time-calibrated species tree we made earlier: <code>Coleoptera_TimeTree.tre</code></li> <li>If you don\u2019t you can fetch it from the data folder: <pre><code>cp /workspace/biodivinfo/data/Session3/Step1/Coleoptera_TimeTree.tre .\n</code></pre></li> </ul> </li> <li>A gene tree: this can have fewer species than the species tree (due to losses) and it can have more than one gene per species (due to duplications)<ul> <li>We have the molecular gene family tree we made earlier: <code>RAxML_bipartitions.10261at7041</code></li> <li>If you don\u2019t you can fetch it from the data folder: <pre><code>cp /workspace/biodivinfo/data/Session3/Step2/RAxML_bipartitions.10261at7041 .\n</code></pre></li> </ul> </li> <li> <p>A mapping file indicating which genes belong to which species: <code>treerecs</code> can try to do this by matching identifiers but it is advisable to provide a map</p> <ul> <li>This we made manually, you can fetch it from the data folder: <pre><code>cp /workspace/biodivinfo/data/Session3/Step3/gene2species_map.txt .\n</code></pre></li> <li>This file simply lists the genes (green) and the species (blue) they belong to, so that <code>treerecs</code> knows which genes come from which species</li> </ul> <p> </p> </li> </ul> <p>Start by checking out what <code>treerecs</code> needs as command-line options, input, and output names etc. in order to perform a gene-tree-species-tree reconciliation: <code>treerecs -h</code>.</p> <p>The main input that <code>treerecs</code> needs:</p> <ul> <li><code>-g</code>, <code>--genetree GENETREE_FILE</code></li> <li><code>-s</code>, <code>--speciestree SPECIESTREE_FILE</code></li> <li><code>-S</code>, <code>--smap SMAP_FILE</code></li> <li>We will also ask it to: <code>-r</code>, <code>--reroot</code>: find the best root according to the reconciliation cost</li> <li>We will ask it to produce both Newick and an image (.svg) output</li> <li>And we will ask it to: <code>-f</code>, <code>--force</code>: force possible overwrite of existing files</li> </ul> <p>Putting them all together we have the following: <pre><code>treerecs -g RAxML_bipartitions.10261at7041 -s Coleoptera_TimeTree.tre -S gene2species_map.txt -r -O newick:svg -f\n</code></pre></p> <p>This will create a folder called <code>treerecs_output</code>. The <code>.svg</code> output file can now be downloaded and viewed e.g. in a browser like Chrome. You can also click here to view it directly.</p> <p>If treerecs failed you can fetch the files from the data folder</p> <ul> <li>The <code>.svg</code> file: <pre><code>cp /workspace/biodivinfo/data/Session3/Step3/treerecs_output/RAxML_bipartitions.10261at7041_recs.svg .\n</code></pre></li> <li>The Newick file: <pre><code>cp /workspace/biodivinfo/data/Session3/Step3/treerecs_output/RAxML_bipartitions.10261at7041_recs.nwk .\n</code></pre></li> </ul> <p>Viewing the Newick file you will see that there is a header printed that provides the total \u201ccost\u201d and the number of predicted duplications and losses:</p> <p>Question: What is meant by the \u201ctotal cost\u201d of the reconciliation?</p> Answer <p>The total cost is the weighted sum of the cost of all the duplications and losses required to reconcile the two trees. Here, a duplication has a cost of 2 and a loss has a cost of 1 (5 * 2 + 4 * 1 = 14 = total cost).</p> <p>The <code>.svg</code> image shows these results visually, by mapping the inferred evolutionary events (duplications  and losses ) inside the species phylogeny: showing a total of 5 predicted duplications and 4 predicted losses.</p> <p><code>treerecs</code> symbols</p> <ul> <li>Duplication: </li> <li>Loss: </li> </ul> <p>Let\u2019s now compare this with the input gene tree (<code>RAxML_bipartitions.10261at7041</code> - this should still be open in your iTOL browser), we can use iTOL to:</p> <ul> <li><code>Basic</code>: invert the gene tree</li> <li><code>Basic</code>: ignore the branch lengths</li> <li><code>Advanced</code>: resize to be taller and narrower</li> </ul> <p>If you did not manage to visualise the tree</p> <p>You can find it on Gitpod at <code>/workspace/biodivinfo/data/Session3/Step2/tree_dynamic_family_inverted.jpg</code>. Or you can directly see it here.</p> <p>Question: Can you see the correspondence between the inferred events and the gene tree?</p> Answer <p>The correspondence appears quite clearly. However, it is easier to visualise with both trees side-by-side (see below).</p> <p>High-resolution version</p> <p>You can find a better version of the figure on Gitpod at <code>/workspace/biodivinfo/data/Session3/Step3/annotated_reconciliation.png</code>. Or you can directly see it here.</p> <p>The placement in the gene tree of the Tenebrionoidea (Tribolium castaneum &amp; Tribolium madens) as more early branching than the Coccinelloidea (Coccinella septempunctata &amp; Hamonia axyridis) is in conflict with the species tree. This means that reconciliation inferred 1 duplication in the common ancestor of Tenebrionoidea-Coccinelloidea (pink) followed by 3 losses to match the counts in the gene tree (green).</p> <p>Question: Do you think this is a reasonable mapping of events - given that the node in the gene tree corresponding to Tenebrionoidea-Coccinelloidea obtained only 50% support?</p> Answer <p>This is probably not a reasonable mapping of event. Uncertainty in the gene tree is causing the reconciliation to over-complicate the number of events needed to resolve the two trees.</p> <p>The good news is that <code>treerecs</code> can be asked to ignore weekly-supported nodes of a gene tree during the reconciliation process, setting a threshold e.g. of 55%:</p> <ul> <li>Achieved by adding the <code>-t 55</code> option</li> <li>We also give the output a name <code>-o treerecs_output2</code> so it does not overwrite our first attempt at reconciliation using default parameters <pre><code>treerecs -g RAxML_bipartitions.10261at7041 -s Coleoptera_TimeTree.tre -S gene2species_map.txt -r -O newick:svg -f -t 55 -o treerecs_output2\n</code></pre></li> </ul> <p>If treerecs failed you can fetch the files from the data folder</p> <ul> <li>The <code>.svg</code> file: <pre><code>cp /workspace/biodivinfo/data/Session3/Step3/treerecs_output2/RAxML_bipartitions.10261at7041_recs.svg .\n</code></pre></li> <li>The Newick file: <pre><code>cp /workspace/biodivinfo/data/Session3/Step3/treerecs_output2/RAxML_bipartitions.10261at7041_recs.nwk .\n</code></pre> When you download this new <code>.svg</code> make sure to change the name or it could overwrite the one you downloaded previously</li> </ul> <p> </p> <p>The result maps the inferred evolutionary events (duplications and losses) inside the species phylogeny: now 4 duplications and 1 loss</p> <ul> <li>3 duplications appear as recent species-specific gene duplications</li> <li>1 duplication appears in the ancestor of Tribolium castaneum &amp; Tribolium madens</li> </ul> <p>Questions:</p> <ul> <li>Do you think this is a more reasonable mapping of events?</li> <li>Why is the Tribolium duplication considered as an ancestral event and not two independent duplications, one in each species of Tribolium?</li> </ul> Answer <ul> <li>This mapping of events is more reasonable because it decreases the number of events required to explain the phylogeny. As such, it respects the principle of maximum parsimony</li> <li>For the same reason than previously: it is more likely to see 1 ancestral duplication event followed by 1 speciation event rather than 1 speciation event followed by 2 ancestral duplication events</li> </ul> <p>High-resolution version</p> <p>You can find a better version of the figure on Gitpod at <code>/workspace/biodivinfo/data/Session3/Step3/annotated_reconciliation2.png</code>. Or you can directly see it here.</p>"},{"location":"course_material/day2/6_reconstruction/","title":"Gene Family Ancestral State Reconstruction","text":""},{"location":"course_material/day2/6_reconstruction/#aim","title":"Aim","text":"<p>Estimate ancestral gene copy numbers given the species phylogeny and counts of orthologous genes present in extant species.</p>"},{"location":"course_material/day2/6_reconstruction/#learning-outcomes","title":"Learning outcomes","text":"<ul> <li>What is the difference between tree reconciliation and state reconstruction?</li> <li>What is gene family ancestral state reconstruction trying to achieve and how?</li> </ul>"},{"location":"course_material/day2/6_reconstruction/#using-orthologue-counts-to-estimate-ancestral-gene-content","title":"Using orthologue counts to estimate ancestral gene content","text":"<p>There are a huge range of tools designed for ancestral state reconstructions, you may for example have encountered the R package, phytools. Today we will use CAFE5, a tool specifically designed for working with gene count data to infer ancestral gene contents per gene family.</p> <p>Before we reconstruct the ancestral state gene content of our species of interest, let\u2019s create a working directory for this exercise, starting by opening a terminal on the Workspace if you\u2019ve not already got one open. Then, from the <code>/workspace/biodivinfo/</code> directory, create a new directory (<code>mkdir</code>) and navigate into the new directory (<code>cd</code>):</p> <pre><code>cd /workspace/biodivinfo/\nmkdir Session4\ncd Session4/\n</code></pre> <p>We will continue to work with the same dataset of orthologous groups delineated across 15 beetles from OrthoDB. The main input requirements for CAFE are:</p> <ul> <li>An ultrametric time-calibrated species tree<ul> <li>We have the ultrametric time-calibrated species tree we made earlier: <code>Coleoptera_TimeTree_IDs.tre</code></li> <li>This is a version with just the species identifiers not the names. You can fetch it from the data folder: <pre><code>cp /workspace/biodivinfo/data/Session4/Coleoptera_TimeTree_IDs.tre .\n</code></pre></li> </ul> </li> <li>A table of counts of orthologues per species<ul> <li>This table was obtained by downloading and parsing the full table of orthology data from OrthoDB to extract counts of genes per species for Coleoptera-level orthogroups, you can fetch these pre-processed data here: <pre><code>cp /workspace/biodivinfo/data/Session4/Coleoptera_OGs.tsv .\n</code></pre></li> <li> <p>The table contains rows of orthogroups (blue) with columns of species (green) and all the counts of orthologues per orthogroup per species</p> <ul> <li>For the class the full set of 14\u2018753 orthogroups has been first filtered to select only orthologous groups found in more than 90% of species (with no restriction on gene copy-number), leaving 6\u2018824 orthogroups. Note that the species names/identifiers must be the same as those we have in our ultrametric time-calibrated species phylogeny</li> </ul> <p> </p> </li> </ul> </li> </ul> <p>Start by checking out what <code>CAFE</code> needs as command-line options, input, and output names etc. in order to perform an ancestral state reconstruction:</p> <pre><code>cafe5 -h\n</code></pre> <p>The main input that CAFE needs:</p> <ul> <li><code>-i</code>, <code>--infile</code>: path to tab delimited gene families file to be analysed</li> <li><code>-t</code>, <code>--tree</code>: path to file containing Newick formatted tree</li> </ul> <p>Putting this all together we have the following: <pre><code>cafe5 -i Coleoptera_OGs.tsv -t Coleoptera_TimeTree_IDs.tre\n</code></pre></p> <p>CAFE uses a birth and death process to model gene gain and loss across a user-specified phylogenetic tree. The distribution of family sizes generated under this model provides a basis for assessing the significance of the observed family size differences among taxa. Estimating Lambda (the traditional running of CAFE) performs a maximum likelihood calculation to estimate the most likely rate of change across the entire tree, given all the families and their counts</p> <p>For a typical CAFE analysis, users are most interested in determining two things:</p> <ul> <li>Which gene families/orthogroups are rapidly evolving?</li> <li>On which branches of the tree these families are rapidly evolving?</li> </ul> <p>By default, CAFE creates its outputs into a folder called \u201cresults\u201d: <pre><code>ls -l /workspace/biodivinfo/Session4/results\n</code></pre></p> <p>If CAFE failed, you can get the file from the folder with data files for the practical instead</p> <pre><code>cp -r /workspace/biodivinfo/data/Session4/results .\n</code></pre> <p>The <code>Base_asr.tre</code> output file contains all orthogroups with the ancestral gene counts mapped to the species tree. You might recognise the first tree as the orthogroup we used to build our first species tree (<code>10000at7041)</code>.</p> <p>We can get an overview of gains and losses across all families using a script provided by CAFE, <code>cafe5_draw_tree.py</code>: <pre><code>wget https://raw.githubusercontent.com/hahnlab/CAFE5/master/docs/tutorial/cafe5_draw_tree.py\n</code></pre></p> <p>You can also fetch the python script from the folder with data files for the practical</p> <pre><code>cp /workspace/biodivinfo/scripts/cafe5_draw_tree.py .\n</code></pre> <p>Start by checking out what are the script parameters: <pre><code>python cafe5_draw_tree.py -h\n</code></pre></p> <p>First we can plot the gains (Increase) across the tree: <pre><code>python cafe5_draw_tree.py -i results/Base_clade_results.txt -d results/Base_report.cafe -y Increase -o CAFE_gains_tree.png\n</code></pre></p> <p>And now we can plot the losses (Decrease) across the tree: <pre><code>python cafe5_draw_tree.py -i results/Base_clade_results.txt -d results/Base_report.cafe -y Decrease -o CAFE_losses_tree.png\n</code></pre></p> <p>The <code>.png</code> output files should be in your working directory, you can open them in Gitpod to view numbers of families showing gains or losses across the species tree.</p> <p>High-resolution version</p> <p>You can find a better version of the figure on Gitpod at <code>/workspace/biodivinfo/data/Session4/CAFE_gains_tree.png</code> and <code>/workspace/biodivinfo/data/Session4/CAFE_losses_tree.png</code>. Or you can also see them here: gains &amp; losses</p> <p>Questions:</p> <ul> <li>Which internal node shows the most gains?</li> <li>Which internal node shows the most losses?</li> </ul> Answer <ul> <li>The node between species <code>224129</code> and <code>7054</code> shows the most gains (230).</li> <li>The node between species <code>115357</code> and <code>7070</code> shows the most losses (116).</li> </ul> <p>A reminder of the species in our tree:</p>"},{"location":"course_material/day2/6_reconstruction/#comparing-ancestral-gene-content-estimates-with-reconciliation-results","title":"Comparing ancestral gene content estimates with reconciliation results","text":"<p>As a final step we can compare the results from our previous gene-tree-species-tree reconciliation of orthogroup <code>10261at7041</code> with those from gene family ancestral state reconstruction.</p> <p>Extract the gain-loss annotated tree for <code>10261at7041</code> from the CAFE results: <pre><code>grep 10261at7041 results/Base_asr.tre\n</code></pre></p> <p>Copy the output of the previous <code>grep</code> command (which is a Newick tree) and open it in iTOL as we did before - note that the Newick tree starts with the first open parenthesis and ends with the semicolon. Use the <code>Advanced Control Panel</code> to Display the Node IDs and view internal node annotations.</p> <p>Note</p> <p>You can also find the Newick file on gitpod at: <code>/workspace/biodivinfo/data/Session4/10261at7041_reconstruction.nwk</code></p> <p>If you did not manage to visualise the tree</p> <p>You can find it on Gitpod at <code>/workspace/biodivinfo/data/Session4/tree_10261at7041_CAFE.jpg</code>. Or you can directly see it here.</p> <p></p> <p>Terminal nodes (leaves) are labelled with the species (green), CAFE\u2019s own numbering of all nodes in the tree (yellow) and finally gene the copy number (pink). Nodes inside the tree are labelled with the internal CAFE numbering of all nodes in the tree (yellow) and the gene the copy number (pink).</p> <p>Nodes exhibiting significant changes from their ancestral states are indicated with an asterisk (*). We can now place our CAFE estimates next to our treerecs estimates to compare the results from the two approaches:</p> <p>Question: Do the ancestral state reconstructions results (<code>CAFE</code>) agree with the tree reconciliation events (<code>treerecs</code> - after asking it to ignore low-confidence nodes)?</p> Answer <p>Yes, they perfectly agree with each other!</p> <p></p>"},{"location":"course_material/day2/6_reconstruction/#congratulations-you-made-it-to-the-end","title":"Congratulations, you made it to the end!","text":""}]}